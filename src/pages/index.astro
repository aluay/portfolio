---
import Layout from "../layouts/Layout.astro";
import Hero from "../components/Hero.astro";
import Work from "../components/Work.astro";
import Skills from "../components/Skills.astro";
import Footer from "../components/Footer.astro";
import ScrollProgress from "../components/ScrollProgress.astro";
import BackToTop from "../components/BackToTop.astro";
---

<Layout
	title="Abdullah Luay â€” Creative Web Developer | Portland, OR"
	description="Portfolio of Abdullah Luay, a creative web developer based in Portland, OR. Specializing in React, Next.js, TypeScript, and modern web technologies. Currently learning Human-Computer Interaction."
	keywords={[
		"web developer",
		"frontend developer",
		"React developer",
		"Next.js developer",
		"TypeScript",
		"Portland developer",
		"Oregon developer",
		"UI/UX developer",
		"creative developer",
		"human-computer interaction",
		"Abdullah Luay",
	]}
>
	<ScrollProgress />
	<main id="main-content" role="main">
		<Hero />
		<Work />
		<Skills />
	</main>
	<Footer />
	<BackToTop />
</Layout>

<script>
	// Smooth scrolling for anchor links
	document.addEventListener("DOMContentLoaded", function () {
		const links = document.querySelectorAll('a[href^="#"]');

		links.forEach((link) => {
			link.addEventListener("click", function (e: Event) {
				e.preventDefault();

				const target = e.target as HTMLAnchorElement;
				const targetId = target.getAttribute("href");
				const targetElement = document.querySelector(targetId as string);

				if (targetElement) {
					const targetPosition =
						targetElement.getBoundingClientRect().top + window.pageYOffset;

					window.scrollTo({
						top: targetPosition,
						behavior: "smooth",
					});
				}
			});
		});

		// Intersection Observer for fade-in animations
		const observerOptions = {
			threshold: 0.1,
			rootMargin: "0px 0px -50px 0px",
		};

		const observer = new IntersectionObserver((entries) => {
			entries.forEach((entry) => {
				if (entry.isIntersecting) {
					(entry.target as HTMLElement).style.animationPlayState = "running";
				}
			});
		}, observerOptions);

		// Observe all fade-in elements
		const fadeElements = document.querySelectorAll(".fade-in");
		fadeElements.forEach((el) => {
			(el as HTMLElement).style.animationPlayState = "paused";
			observer.observe(el);
		});
	});
</script>

<style>
	main {
		position: relative;
		z-index: 1;
	}
</style>
